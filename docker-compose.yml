version: '3'
services:
    # Odoo
    odoo:
        build: .
        # container_name: odoo
        image: odoo
        restart: always
        networks:
            - odoo-default
        volumes:
            - ./addons:/mnt/extra-addons
            - ./config/odoo:/etc/odoo
            - odoo-web-data:/var/lib/odoo
        links:
            - db:db
        ports:
            - "8070-8072:8069"
        depends_on:
            - db
        deploy:
            replicas: 3

    # odoo2:
    #     build: .
    #     container_name: odoo2
    #     image: odoo
    #     restart: always
    #     networks:
    #         - odoo-default
    #     volumes:
    #         - ./addons:/mnt/extra-addons
    #         - ./config/odoo2:/etc/odoo
    #         - odoo2-web-data:/var/lib/odoo
    #     links:
    #         - db:db
    #     ports:
    #         - 8071:8069
    #     depends_on:
    #         - db
    
    # # NGINX
    nginx:
        build: .
        container_name: nginx
        image: nginx
        restart: always
        networks:
            - odoo-default
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./config/nginx:/etc/nginx/conf.d
        # links:
        #     - odoo:odoo
            # - odoo2:odoo2
        depends_on:
            - odoo
            # - odoo2
        expose:
            - 80

    # Postgres
    db:
        container_name: db
        image: postgres:13
        restart: always
        environment:
            POSTGRES_PASSWORD: odoo
            POSTGRES_HOST_AUTH_METHOD: trust

        networks:
            - odoo-default
        volumes:
            - ./postgresql:/docker-entrypoint-initdb.d/
            # - ./pg-data:/var/lib/postgresql/data
        # command: createuser -s odoo
    
volumes:
    odoo-web-data:
    # odoo2-web-data:
    postgresql:

networks:
    odoo-default:
        external: true